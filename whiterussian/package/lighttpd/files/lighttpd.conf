# lighttpd configuration file for OpenWrt

### server configuration

## modules to load
# at least mod_access and mod_accesslog should be loaded
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory

# modules loaded by default are
# mod_dirlisting, mod_indexfile, mod_staticfile

# additional modules
#server.modules = (
#			"mod_access",
#			"mod_accesslog",
#			"mod_alias",
#			"mod_auth",
#			"mod_cgi",
#			"mod_compress",
#			"mod_evasive",
#			"mod_evhost",
#			"mod_expire",
#			"mod_extforward",
#			"mod_fastcgi",
#			"mod_flv_streaming",
#			"mod_proxy",
#			"mod_redirect",
#			"mod_rewrite",
#			"mod_rrdtool",
#			"mod_scgi",
#			"mod_secdownload",
#			"mod_setenv",
#			"mod_simple_vhost",
#			"mod_ssi",
#			"mod_status",
#			"mod_trigger_b4_dl",
#			"mod_userdir",
#			"mod_usertrack",
#			"mod_webdav"
#		)

# force use of the "write" backend (closes: #2401)
server.network-backend = "write"

## a static document-root, for virtual-hosting take look at the
# server.virtual-* options
server.document-root = "/www/"

## where to send error-messages to
# log via syslog
server.errorlog-use-syslog = "enable"
# send to a file
#server.errorlog = "/var/log/lighttpd/error.log"

## bind to port (default: 80)
#server.port = 81

## bind to localhost (default: all interfaces)
#server.bind = "127.0.0.1"

## to help the rc.scripts
server.pid-file = "/var/run/lighttpd.pid"

## error-handler for status 404
#server.error-handler-404 = "/error-handler.html"
#server.error-handler-404 = "/error-handler.php"

##
## Format: <errorfile-prefix><status-code>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix = "/www/errors/status-"

## enable debugging
#debug.log-request-header = "enable"
#debug.log-response-header = "enable"
#debug.log-request-handling = "enable"
#debug.log-file-not-found = "enable"

### only root can use these options

# chroot() to directory (default: no chroot() )
#server.chroot = "/"

## change uid to <uid> (default: don't care)
#server.username = "nobody"

## change uid to <uid> (default: don't care)
#server.groupname = "nobody"

server.upload-dirs = ( "/tmp" )

#### SSL engine
#ssl.engine = "enable"
#ssl.pemfile = "/etc/ssl/private/lighttpd.pem"

## mimetype mapping
mimetype.assign = (
	".pdf" => "application/pdf",
	".sig" => "application/pgp-signature",
	".spl" => "application/futuresplash",
	".class" => "application/octet-stream",
	".ps" => "application/postscript",
	".torrent" => "application/x-bittorrent",
	".dvi" => "application/x-dvi",
	".gz" => "application/x-gzip",
	".pac" => "application/x-ns-proxy-autoconfig",
	".swf" => "application/x-shockwave-flash",
	".tar.gz" => "application/x-tgz",
	".tgz" => "application/x-tgz",
	".tar" => "application/x-tar",
	".zip" => "application/zip",
	".mp3" => "audio/mpeg",
	".m3u" => "audio/x-mpegurl",
	".wma" => "audio/x-ms-wma",
	".wax" => "audio/x-ms-wax",
	".ogg" => "application/ogg",
	".wav" => "audio/x-wav",
	".gif" => "image/gif",
	".jpg" => "image/jpeg",
	".jpeg" => "image/jpeg",
	".png" => "image/png",
	".xbm" => "image/x-xbitmap",
	".xpm" => "image/x-xpixmap",
	".xwd" => "image/x-xwindowdump",
	".css" => "text/css",
	".html" => "text/html",
	".htm" => "text/html",
	".js" => "text/javascript",
	".asc" => "text/plain",
	".c" => "text/plain",
	".cpp" => "text/plain",
	".log" => "text/plain",
	".conf" => "text/plain",
	".text" => "text/plain",
	".txt" => "text/plain",
	".dtd" => "text/xml",
	".xml" => "text/xml",
	".mpeg" => "video/mpeg",
	".mpg" => "video/mpeg",
	".mov" => "video/quicktime",
	".qt" => "video/quicktime",
	".avi" =>"video/x-msvideo",
	".asf" => "video/x-ms-asf",
	".asx" => "video/x-ms-asf",
	".wmv" => "video/x-ms-wmv",
	".bz2" => "application/x-bzip",
	".tbz" => "application/x-bzip-compressed-tar",
	".tar.bz2" => "application/x-bzip-compressed-tar",
# default mime type
	"" => "application/octet-stream"
)

# Use the "Content-Type" extended attribute to obtain mime type if possible
#mimetype.use-xattr = "enable"

## send a different Server: header
# be nice and keep it at lighttpd
#server.tag = "lighttpd/1.4.18"

$HTTP["url"] =~ "\.pdf$" {
	server.range-requests = "disable"
}


###### modules

### mod_access
# deny access the file-extensions
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
#url.access-deny = ( "~", ".inc" )

### mod_accesslog
# send log to syslog
#accesslog.use-syslog = "enable"
# send log to a file
#accesslog.filename = "/var/log/lighttpd/access.log"

### mod_alias
# rewrites the document-root for a URL-subset
#alias.url = ( "/cgi-bin/" => "/www/cgi-bin/" )

### mod_auth
#auth.backend = "plain"
#auth.backend.plain.userfile = "/etc/lighttpd/lighttpd.user"
#auth.backend.plain.groupfile = "/etc/lighttpd/lighttpd.group"

#auth.require = ( "/server-status" =>
#			(
#				"method"  => "digest",
#				"realm"   => "download archiv",
#				"require" => "user=jan"
#			),
#		"/server-config" =>
#			(
#				"method"  => "digest",
#				"realm"   => "download archiv",
#				"require" => "valid-user"
#			)
#		)

### mod_cgi
#cgi.assign = ( ".pl"  => "/usr/bin/perl",
#		".cgi" => "/usr/bin/perl" )

### mod_compress
#compress.cache-dir = "/dev/null"
#compress.filetype = ("text/plain", "text/html")
#compress.max-filesize = 2048

### mod_dirlisting
# Disabled at default
# To enable directory listings globally:
#dir-listing.activate = "enable"
# If you need it only for a directory, use conditionals:
#$HTTP["url"] =~ "^/download($|/)" {
#	dir-listing.activate = "enable"
#}

### mod_evasive
# limit connections per IP
#evasive.max-conns-per-ip = 3

### mod_evhost
# define a pattern for the host url finding
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
#evhost.path-pattern = "/srv/www/vhosts/%3/htdocs/"

### mod_expire
#expire.url = ( "/buggy/" => "access 2 hours", "/asdhas/" => "access plus 1 seconds 2 minutes")

### mod_extforward
#extforward.forwarder = ("10.0.0.232" => "trust")

### mod_fastcgi
## for PHP don't forget to set cgi.fix_pathinfo = 1 in the php.ini
#fastcgi.server = ( ".php" =>
#			( "localhost" =>
#				(
#					"socket" => "/var/run/lighttpd/php-fastcgi.socket",
#					"bin-path" => "/usr/local/bin/php-cgi"
#				)
#			)
#		)

### mod_flv_streaming
#flv_streaming.extensions = ( ".flv" )

### mod_indexfile
# files to check for if .../ is requested
index-file.names = ( "index.php", "index.html",
			"index.htm", "default.htm" )

### mod_proxy
#proxy.server = ( ".php" =>
#			( "localhost" =>
#				(
#					"host" => "192.168.0.101",
#					"port" => 80
#				)
#			)
#		)

### mod_redirect
#url.redirect = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )
#### both rewrite/redirect support back reference to regex conditional using %n
#$HTTP["host"] =~ "^www\.(.*)" {
#	url.redirect = ( "^/(.*)" => "http://%1/$1" )
#}

### mod_rewrite
#url.rewrite = ( "^/$" => "/server-status" )

### mod_rrdtool
#rrdtool.binary = "/usr/bin/rrdtool"
#rrdtool.db-name = "/var/lib/lighttpd/lighttpd.rrd"

### mod_staticfile
# which extensions should not be handle via static-file transfer
# .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

### mod_scgi
# see mod_fastcgi

### mod_secdownload
#secdownload.secret = "verysecret"
#secdownload.document-root = "/home/www/servers/download-area/"
#secdownload.uri-prefix = "/dl/"
#secdownload.timeout = 120

### mod_setenv
#setenv.add-environment = ( "TRAC_ENV" => "lighttpd", "RAILS_ENV" => "production" )
#setenv.add-request-header = ( "TRAV_ENV" => "mysql://user@host/db" )
#setenv.add-response-header = ( "X-Secret-Message" => "42" )

### mod_simple_vhost
# If you want name-based virtual hosting add the next three settings and load
#  mod_simple_vhost
#
# document-root =
#   virtual-server-root + virtual-server-default-host + virtual-server-docroot
# or
#   virtual-server-root + http-host + virtual-server-docroot
#
#simple-vhost.server-root   = "/srv/www/vhosts/"
#simple-vhost.default-host  = "www.example.org"
#simple-vhost.document-root = "/htdocs/"

### mod_ssi
#ssi.extension = ( ".shtml" )

### mod_status
#status.status-url = "/server-status"
#status.config-url = "/server-config"

### mod_trigger_b4_dl
# trigger-before-download.gdbm-filename = "/var/lib/lighttpd/trigger.db"
# trigger-before-download.memcache-hosts = ( "127.0.0.1:11211" )
# trigger-before-download.trigger-url = "^/trigger/"
# trigger-before-download.download-url = "^/download/"
# trigger-before-download.deny-url = "http://127.0.0.1/index.html"
# trigger-before-download.trigger-timeout = 10

### mod_userdir
#userdir.path = "public_html"
#userdir.exclude-user = ( "root", "postmaster" )

### mod_usertrack
#usertrack.cookie-domain = ".example.com"
#usertrack.cookie-max-age = 60
#usertrack.cookie-name = "mycookie"

### mod_webdav
#$HTTP["url"] =~ "^/dav($|/)" {
#	webdav.activate = "enable"
#	webdav.is-readonly = "enable"
#	webdav.sqlite-db-name = "/var/run/lighttpd/lighttpd.webdav_lock.db"
#}


### variable usage:

## variable name without "." is auto prefixed by "var." and becomes "var.bar"
#bar = 1
#var.mystring = "foo"

## integer add
#bar += 1
## string concat, with integer cast as string, result: "www.foo1.com"
#server.name = "www." + mystring + var.bar + ".com"
## array merge
#index-file.names = (foo + ".php") + index-file.names
#index-file.names += (foo + ".php")

#### include
#include /etc/lighttpd/lighttpd-inc.conf
## same as above if you run: "lighttpd -f /etc/lighttpd/lighttpd.conf"
#include "lighttpd-inc.conf"

#### include_shell
#include_shell "echo var.a=1"
## the above is same as:
#var.a=1
